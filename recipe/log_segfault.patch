From d4bd0737f5ebf06f4fa686b8e221ae45d13257b8 Mon Sep 17 00:00:00 2001
From: Isuru Fernando <isuruf@gmail.com>
Date: Fri, 29 Jun 2018 19:29:18 -0600
Subject: [PATCH] Don't assume that a is positive in rational_power_parts

Otherwise, in CentOS 6, log(-3) causes a segfault instead of returning nan
---
 ginac/numeric.cpp | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/ginac/numeric.cpp b/ginac/numeric.cpp
index e6344cd..78643df 100644
--- a/ginac/numeric.cpp
+++ b/ginac/numeric.cpp
@@ -1653,12 +1653,13 @@ void rational_power_parts(const numeric& a_orig, const numeric& b_orig,
         std::vector<std::pair<numeric, int>> factors;
         long max_prime_idx;
         static numeric maxnum = numeric(10).power(200);
-        if (a < maxnum) {
+        if (a.abs() < maxnum) {
                 double ad;
                 if (a.t == MPZ)
                         ad = mpz_get_d(a.v._bigint);
                 else
                         ad = a.v._long;
+                ad = std::abs(ad);
                 double adrootlog = std::log(ad) / denoml;
                 double adroot = std::exp(adrootlog);
                 double mpid = adroot*1.25506/adrootlog;
